# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "centos/7"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
#config.vm.provider :kvm do |kvm, override|
#    kvm.memory_size     = '2048m'
# end  

$script = <<-CSCRIPT 
cat<<-EOF >/etc/yum.repos.d/localvagrant.repo
[localVagrant]
name=CentOS-$releasever - local vagrant packages for $basearch
baseurl=file:///vagrant/repo/centos/7/x86_64/
enabled=1
gpgcheck=0
protect=1  
EOF
  rpm -import /vagrant/rpm-gpg/RPM-GPG-KEY-puppet
  yum -y install puppet-agent 
  /opt/puppetlabs/puppet/bin/gem install zabbixapi
CSCRIPT

  config.vm.define :central, primary: true  do |central| 
   # central.vm.network "public_network", ip: "192.168.0.23"
   central.vm.network "forwarded_port", guest: 80, host: 8080
   central.vm.network "forwarded_port", guest: 15672, host: 15672
   central.vm.provider :libvirt do |libvirt, override|
      libvirt.memory = 2048
      libvirt.cpus = 2
      libvirt.nested = true
    end
    central.vm.hostname = "central"
    central.vm.box = "centos/7"
    central.vm.provision :shell do |shell|
      shell.inline = $script
    end
    central.vm.provision "shell", inline: "/opt/puppetlabs/bin/puppet apply --modulepath=/vagrant/puppet/modules /vagrant/puppet/manifests/site.pp"
#    central.vm.provision :puppet do |puppet|  this provisioning method  is compatible  only with puppet < 4  && some modules like puppet/zabbix is compatible puppet>=4 || puppet ent 
#      puppet.manifests_path = "puppet/manifests"
#      puppet.module_path = "puppet/modules"
#      puppet.hiera_config_path = "puppet/hiera.yaml"
#      puppet.manifest_file = "site.pp"
#    end
  end
  config.vm.define :worker do |worker| 
    worker.vm.hostname = "worker"
    worker.vm.box = "centos/7"
    worker.vm.provision :shell do |shell|
      shell.inline = $script
    end
    worker.vm.provision "shell", inline: "/opt/puppetlabs/bin/puppet apply --modulepath=/vagrant/puppet/modules /vagrant/puppet/manifests/site.pp"
  end

  (1..3).each do |i|
    config.vm.define "worker_#{i}",autostart: false do |node|
      node.vm.hostname = "worker-#{i}"
      node.vm.box = "centos/7"
      node.vm.provision :shell do |shell|
        shell.inline = $script
      end
      node.vm.provision "shell", inline: "/opt/puppetlabs/bin/puppet apply --modulepath=/vagrant/puppet/modules /vagrant/puppet/manifests/site.pp"
    end
  end

end
